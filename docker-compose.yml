version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - localnet
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181


  broker:
    image: confluentinc/cp-kafka:7.6.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    networks:
      - localnet
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #KAFKA_LISTENERS: LISTENER_1://broker:29092,LISTENER_2://broker:9092
      #KAFKA_ADVERTISED_LISTENERS: LISTENER_1://broker:29092,LISTENER_2://localhost:9092
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_1:PLAINTEXT,LISTENER_2:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  connect:
    image: confluentinc/cp-kafka-connect:7.6.0
    ports:
      - 8083:8083
    container_name: connect
    depends_on:
      - zookeeper
      - broker
    networks:
      - localnet
    volumes:
      - ./plugins/confluentinc-kafka-connect-elasticsearch-14.0.8/lib:/usr/share/java/kafka-connect-elasticsearch
      - ./plugins/confluentinc-kafka-connect-jdbc-10.7.6/lib:/usr/share/java/kafka-connect-jdbc
      - ./plugins/confluentinc-kafka-connect-avro-converter-7.6.0/lib:/usr/share/java/kafka-connect-avro

    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker:29092      
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-cluster-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_CONNECTIONS_MAX_IDLE_MS: 180000
      CONNECT_METADATA_MAX_AGE_MS: 180000
      CONNECT_AUTO_CREATE_TOPICS_ENABLE: true
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter


  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.0
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - "8081:8081"
    depends_on:
      - broker
    networks:
      - localnet
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:29092

  # schema-registry-ui:
  #   image: landoop/schema-registry-ui:latest
  #   environment:
  #     SCHEMAREGISTRY_URL: "schema-registry:8081"
  #     PROXY: "true"
  #   ports:
  #     - "8001:8000"
  #   networks:
  #     - localnet
  #   depends_on:
  #     - schema-registry

  redpanda:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda
    restart: always
    ports:
      - '8888:8080'
    environment:
      - CONFIG_FILEPATH=/app/redpanda.yaml
    depends_on:
      - broker
      - zookeeper
    volumes:
      - ./conf/redpanda.yaml:/app/redpanda.yaml
    networks:
      - localnet

 # postgres:
  #   image: debezium/postgres
  #   restart: always
  #   hostname: postgres
  #   container_name: postgres-server
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     ACCEPT_EULA: Y
  #     POSTGRES_USER: mounchon
  #     POSTGRES_PASSWORD: pass123
  #     POSTGRES_DB: Panda
  #   networks:
  #     - localnet

  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 1010:8080
  #   networks:
  #     - localnet

  # sqlserver01:
  #   image: mcr.microsoft.com/mssql/server:2019-latest
  #   container_name: sqlserver01
  #   ports:
  #     - 1435:1433
  #   environment:
  #     - ACCEPT_EULA=Y
  #     - MSSQL_PID=Developer
  #     - MSSQL_SA_PASSWORD=Password1234!
  #     - MSSQL_AGENT_ENABLED=true
  #   volumes:
  #     - mssql_data:/var/opt/mssql      
  #   networks:
  #     - localnet
networks:
  localnet:
    attachable: true
